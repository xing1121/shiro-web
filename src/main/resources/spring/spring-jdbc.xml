<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 引入数据源配置的属性文件 -->	
	<context:property-placeholder location="classpath:properties/dbconfig.properties"/>
	
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="username" value="${jdbc_username}"></property>
		<property name="password" value="${jdbc_password}"></property>
		<property name="url" value="${jdbc_url}"></property>
		<property name="driverClassName" value="${jdbc_driver}"></property>
	</bean>

	<!-- 配置mybatis操作数据库 -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定mybatis配置文件的位置 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
		<!-- 指定数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 指定所mapper.xml的位置 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"></property>
		<!--  typeAliasesPackage：它一般对应我们的实体类所在的包，
			这个时候会自动取对应包中不包括包名的简单类名作为包括包名的别名。
			多个package之间可以用逗号或者分号等来进行分隔。(value的值一定要是包的全名) -->
		<property name="typeAliasesPackage" value="com.sf.domain"></property>
	</bean>
	
	<!-- 将所mapper接口的实现类自动加入到ioc容器中  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sf.mapper"></property>
	</bean>

</beans>
